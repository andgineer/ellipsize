{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\u0421\u043e\u043a\u0440\u0430\u0449\u0430\u0439 \u0441\u0442\u0438\u043b\u044c\u043d\u043e","text":"<p>\u041e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0433\u0438\u0433\u0430\u043d\u0442\u0441\u043a\u0438\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0441 \u043e\u0442\u0431\u0440\u0430\u0441\u044b\u0432\u0430\u043d\u0438\u0435\u043c \u0438\u0445 \u0447\u0430\u0441\u0442\u0438.</p> <p>\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 \u0434\u043b\u044f \u043f\u043e\u043a\u0430\u0437\u0430 \u043c\u043d\u043e\u0433\u043e\u043a\u0438\u043b\u043e\u0431\u0430\u0439\u0442\u043d\u044b\u0445 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u0439 AWS \u0438 \u0442.\u0434.</p> <p>\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e, \u044d\u0442\u043e \u043f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u0443\u044e \u043f\u0435\u0447\u0430\u0442\u044c \u043c\u0435\u0433\u0430\u0431\u0430\u0439\u0442 \u0442\u0435\u043a\u0441\u0442\u0430.</p> \u041a\u043e\u043d\u0444\u0438\u0433 \u0441\u043e\u043a\u0440\u0430\u0449\u0435\u043d\u043d\u044b\u0439 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e ellipsize(config, max_items_to_show=1, max_item_length=16) <pre><code>```json\n{\n  \"bounce_delay\": 5,\n \"credentials_file_name\": \"amazon-dash-p..\",\n \"dashboards\": {\"anna_english\": {\"absent\": [{\"image_grid\": \"amazon-dash-p..\",\n                                             \"image_plot\": \"amazon-dash-p..\",\n                                             \"summary\": \"Sick\"},\n                                            ..],\n                                 \"empty_image\": \"amazon-dash-p..\",\n                                 \"summary\": \"Anna English\"},\n \"events\": {\"__DEFAULT__\": {\"actions\": [{\"autoclose\": 10800,\n                                         \"default\": 900,\n                                         \"type\": \"sheet\"},\n                                        ..],\n                            \"summary\": \"{button}\"},\n            \"white\": {\"actions\": [{\"autoclose\": 10800,\n                                   \"default\": 900,\n                                   \"type\": \"sheet\"},\n                                  ..],\n                      \"summary\": [{\"before\": \"12:00:00\",\n                                   \"image\": \"amazon-dash-p..\",\n                                   \"summary\": \"Morning work-out\"},\n                                  ..]}},\n \"latitude\": \"60.002228\",\n \"longitude\": \"30.296947\",\n \"openweathermap_key_file_name\": \"amazon-dash-p..\"\n}\n</code></pre>"},{"location":"installation/","title":"\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430","text":"<pre><code>pip install ellipsize\n</code></pre>"},{"location":"reference/","title":"Reference","text":""},{"location":"reference/#ellipsize","title":"ellipsize","text":"<p>Pretty reducing huge Python objects to visualise them nicely.</p>"},{"location":"reference/#ellipsize-modules","title":"Modules","text":""},{"location":"reference/#ellipsize.ellipsize","title":"ellipsize.ellipsize","text":"<p>Visualize huge Python objects as nicely reduced strings.</p>"},{"location":"reference/#ellipsize.ellipsize-classes","title":"Classes","text":""},{"location":"reference/#ellipsize.ellipsize.Dots","title":"ellipsize.ellipsize.Dots","text":"<p>             Bases: <code>dict</code></p> <p>Show dots inside Python objects repr.</p>"},{"location":"reference/#ellipsize.ellipsize-functions","title":"Functions","text":""},{"location":"reference/#ellipsize.ellipsize.ellipsize","title":"ellipsize.ellipsize.ellipsize","text":"<pre><code>ellipsize(obj: Any, max_items_to_show: int = 10, max_item_length: int = 1024) -&gt; Any\n</code></pre> <p>Reduce huge list/dict to show on screen.</p> <p>In lists (including dict items) show only 1st <code>max_list_items_to_show</code> and add \"..\" if there is more. Limit max dict/list length at max_item_length.</p> <p>Args:     obj: Python object to ellipsize     max_items_to_show: if List or Dict in obj (including nested) has more items,         then show \"..\" instead of the rest items     max_item_length: if List's or Dict's item are not another List/Dict         and his string representation longer than show \"..\" instead of the rest of it</p>"},{"location":"reference/#ellipsize.ellipsize.ellipsize_dict","title":"ellipsize.ellipsize.ellipsize_dict","text":"<pre><code>ellipsize_dict(obj: dict[Any, Any], max_items_to_show: int, max_item_length: int) -&gt; dict[Any, Any]\n</code></pre> <p>Ellipsize dict.</p>"},{"location":"reference/#ellipsize.ellipsize.ellipsize_list","title":"ellipsize.ellipsize.ellipsize_list","text":"<pre><code>ellipsize_list(obj: list[Any], max_items_to_show: int, max_item_length: int) -&gt; list[Any]\n</code></pre> <p>Ellipsize list.</p>"},{"location":"reference/#ellipsize.ellipsize.format_ellipsized","title":"ellipsize.ellipsize.format_ellipsized","text":"<pre><code>format_ellipsized(obj: Any, max_items_to_show: int = 10, max_item_length: int = 1024) -&gt; str\n</code></pre> <p>Pformat ellipsized <code>obj</code>.</p> <p>Use pprint.pformat to convert ellipsize result into string</p> <p>Args:     obj: Python object to ellipsize     max_items_to_show: if List or Dict in obj (including nested) has more items,         then show \"..\" instead of the rest items     max_item_length: if List's or Dict's item are not another List/Dict         and his string representation longer than show \"..\" instead of the rest of it</p>"},{"location":"reference/#ellipsize.ellipsize.print_ellipsized","title":"ellipsize.ellipsize.print_ellipsized","text":"<pre><code>print_ellipsized(*objs: Any, max_items_to_show: int = 10, max_item_length: int = 1024, **kwargs: Any) -&gt; None\n</code></pre> <p>Print ellipsized <code>obj</code> with pprint.</p> <p>Can print many objects, like general print. Pass args to print like end.</p> <p>Args:     objs: Python objects to ellipsize     max_items_to_show: if List or Dict in objs (including nested) has more items,         then show \"..\" instead of the rest items     max_item_length: if List's or Dict's item are not another List/Dict         and his string representation longer than show \"..\" instead of the rest of it</p>"},{"location":"usage/","title":"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435","text":"Ellipsizing config<pre><code>from pprint import pprint\n\nfrom ellipsize.ellipsize import ellipsize\n\nconfig = ...\npprint(ellipsize(config, max_items_to_show=3, max_item_length=99))\n</code></pre>"}]}